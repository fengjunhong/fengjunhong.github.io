<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>从码云拉取到IDE</title>
    <url>/2021/01/14/%E4%BB%8E%E7%A0%81%E4%BA%91%E6%8B%89%E5%8F%96%E5%88%B0IDE/</url>
    <content><![CDATA[<p><img src="https://s3.ax1x.com/2021/01/14/saIsQx.png" alt=""></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>从码云拉取到IDE</tag>
      </tags>
  </entry>
  <entry>
    <title>java文件下载</title>
    <url>/2021/01/14/java%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/</url>
    <content><![CDATA[<blockquote>
<p>方式一、采用文件输出流</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文件下载</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/downServiceAgreement"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">downServiceAgreement</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span>&#123;</span><br><span class="line">    AuthCompanyUser user = CurrentUserHolder.getUser();</span><br><span class="line">    <span class="keyword">assert</span> user != <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 文件的绝对路径</span></span><br><span class="line">        String downCertApplyPath = orderService.downServiceAgreement();</span><br><span class="line">        <span class="comment">//告诉浏览器输出内容为流</span></span><br><span class="line">        response.setContentType(<span class="string">"application/octet-stream"</span>);</span><br><span class="line">        response.setHeader(<span class="string">"Content-Disposition"</span>, <span class="string">"attachment;fileName= "</span> + URLEncoder.encode(<span class="string">"文件名称"</span>, <span class="string">"utf-8"</span>) + <span class="string">".pdf"</span>);</span><br><span class="line">        OutputStream outputStream = response.getOutputStream();</span><br><span class="line">        FileInputStream fileInputStream = <span class="keyword">new</span> FileInputStream(downCertApplyPath);</span><br><span class="line">        <span class="comment">//缓存区</span></span><br><span class="line">        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">while</span> (fileInputStream.read(buffer) != -<span class="number">1</span>) &#123;</span><br><span class="line">            outputStream.write(buffer);</span><br><span class="line">        &#125;</span><br><span class="line">        outputStream.flush();</span><br><span class="line">        fileInputStream.close();</span><br><span class="line">        outputStream.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 删除当前文件</span></span><br><span class="line">        FileUtil.deleteFile(<span class="keyword">new</span> File(downCertApplyPath));</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>前端代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.location.href = <span class="string">'$&#123;ctx&#125;/downServiceAgreement'</span>;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>文件下载</tag>
      </tags>
  </entry>
  <entry>
    <title>前端知识汇总</title>
    <url>/2020/08/31/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<h2 id="jquery知识汇总"><a href="#jquery知识汇总" class="headerlink" title="jquery知识汇总"></a>jquery知识汇总</h2><h3 id="鼠标箭头变手势"><a href="#鼠标箭头变手势" class="headerlink" title="鼠标箭头变手势"></a>鼠标箭头变手势</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">style=<span class="string">"cursor:pointer;"</span></span><br></pre></td></tr></table></figure>
<h2 id="layui知识汇总"><a href="#layui知识汇总" class="headerlink" title="layui知识汇总"></a>layui知识汇总</h2><h3 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">layer.tips(<span class="string">'个人证书，请点击我'</span>, <span class="string">'#personCert'</span>, &#123;</span><br><span class="line">    tips: [<span class="number">1</span>, <span class="string">'rgb(19, 97, 254)'</span>],</span><br><span class="line">    tipsMore : <span class="literal">true</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>参数说明：``</p>
<ol>
<li><code>options:tips的配置型[tips位置：1上；2右；3下；4左,背景颜色]</code></li>
<li><code>tipsMore设置是否允许弹出多个tips</code><a id="more"></a>

</li>
</ol>
<h3 id="input"><a href="#input" class="headerlink" title="input"></a>input</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">lay-reqText</span>=<span class="string">"请输入qq邮箱"</span> <span class="attr">lay-verify</span>=<span class="string">"required|email"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">autocomplete</span>=<span class="string">"off"</span>  <span class="attr">class</span>=<span class="string">"layui-input"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>参数说明：</p>
<ol>
<li>lay-reqText：自定义非空提示语</li>
<li>autocomplete=”off” : 关闭显示历史记录</li>
</ol>
<h3 id="data-属性"><a href="#data-属性" class="headerlink" title="data-属性"></a>data-属性</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;input type=<span class="string">"checkbox"</span> name=<span class="string">"signType"</span> value=<span class="string">"0"</span> data-price=<span class="string">"$&#123;certPrice.projectManagerSign&#125;"</span> lay-skin=<span class="string">"primary"</span> title=<span class="string">"项目经理章"</span> lay-filter=<span class="string">"signType"</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// .....（省略部分代码）</span></span><br><span class="line"></span><br><span class="line">form.on(<span class="string">'checkbox(signType)'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data.elem); <span class="comment">//得到checkbox原始DOM对象</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 将DOM对象转换为jquery对象，再调用attr()方法</span></span><br><span class="line">  <span class="keyword">var</span> price = $(data.elem).attr(<span class="string">"data-price"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="radio"><a href="#radio" class="headerlink" title="radio"></a>radio</h3><p><code>说明：用于多组单选框，联动选中的效果</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 企业类型：招、投标单位</span></span><br><span class="line">form.on(<span class="string">'radio(companyType)'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 联动 ==&gt; 证书类型</span></span><br><span class="line">    <span class="keyword">var</span> certType = <span class="built_in">document</span>.getElementsByName(<span class="string">"certType"</span>);</span><br><span class="line">    $(certType[data.value]).next().click();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="checkbox"><a href="#checkbox" class="headerlink" title="checkbox"></a>checkbox</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// checkbox是否被选中</span></span><br><span class="line"><span class="keyword">var</span> companyCertIsChecked = $(<span class="string">"input[name='userType']"</span>).is(<span class="string">':checked'</span>);</span><br><span class="line"><span class="comment">// 第一个checkbox是否被选中</span></span><br><span class="line"><span class="keyword">var</span> companyCertIsChecked = $(<span class="string">"input[name='userType']"</span>).get(<span class="number">0</span>).checked;</span><br></pre></td></tr></table></figure>
<h3 id="switch-开关按钮"><a href="#switch-开关按钮" class="headerlink" title="switch(开关按钮)"></a>switch(开关按钮)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">form.on(&apos;switch(filter)&apos;, function(data)&#123;</span><br><span class="line">    //开关是否开启，true或者false</span><br><span class="line">    var checked = data.elem.checked;</span><br><span class="line">    var _index = layer.confirm(&apos;确定要进行此操作吗？&apos;, &#123;icon: 3,</span><br><span class="line">        btn: [&apos;确定&apos;,&apos;取消&apos;] //按钮</span><br><span class="line">    &#125;, function()&#123;</span><br><span class="line">        layer.close(_index)</span><br><span class="line">    &#125;, function()&#123;</span><br><span class="line">        data.elem.checked=!checked; // 取消</span><br><span class="line">        form.render();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h3 id="layer-msg"><a href="#layer-msg" class="headerlink" title="layer.msg"></a>layer.msg</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var loadindex = layer.msg(&apos;数据保存中，请稍等...&apos;, &#123;</span><br><span class="line">    icon: 16,</span><br><span class="line">    shade: [0.3, &apos;#393D49&apos;],</span><br><span class="line">    time: 0</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
  </entry>
  <entry>
    <title>薛之谦-演员</title>
    <url>/2020/08/29/music/</url>
    <content><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=32507038&auto=1&height=66"></iframe>]]></content>
      <categories>
        <category>娱乐</category>
      </categories>
      <tags>
        <tag>歌曲</tag>
      </tags>
  </entry>
  <entry>
    <title>第一个单页面应用</title>
    <url>/2019/12/04/%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%95%E9%A1%B5%E9%9D%A2%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<h2 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">vue-init webpack-simple my-project  <span class="comment">//my-project为项目名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 此处选择no</span></span><br><span class="line">Use sass? No</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 依次执行如下代码</span></span><br><span class="line"> To <span class="keyword">get</span> started:</span><br><span class="line">     cd 001-my-project</span><br><span class="line">     npm install</span><br><span class="line">     npm run dev</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>出现下图表示，脚手架初步完成<br><img src="https://img-blog.csdnimg.cn/20191204094747496.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="安装vue-router"><a href="#安装vue-router" class="headerlink" title="安装vue-router"></a>安装vue-router</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">npm install vue-router --save</span><br></pre></td></tr></table></figure>
<h2 id="写逻辑代码"><a href="#写逻辑代码" class="headerlink" title="写逻辑代码"></a>写逻辑代码</h2><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><p><img src="https://img-blog.csdnimg.cn/20191204095047700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="修改main-js"><a href="#修改main-js" class="headerlink" title="修改main.js"></a>修改main.js</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入router</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'./routers/index'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  router, <span class="comment">//挂载router</span></span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h3 id="新增router文件夹"><a href="#新增router文件夹" class="headerlink" title="新增router文件夹"></a>新增router文件夹</h3><p>说明：在src下自行创建routers/index.js文件<br><img src="https://img-blog.csdnimg.cn/20191204100457218.png" alt="在这里插入图片描述"></p>
<h4 id="暴露router"><a href="#暴露router" class="headerlink" title="暴露router"></a>暴露router</h4><p>说明：由于在main.js文件中引入了router,因此必须在这里导出router</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入vue和vue-router的包</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter);</span><br><span class="line"><span class="comment">// 引入用户组件，下面步骤创建</span></span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">'../components/Home/Home'</span></span><br><span class="line"><span class="keyword">import</span> Course <span class="keyword">from</span> <span class="string">'../components/Course/Course'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  routes:[</span><br><span class="line">    &#123;</span><br><span class="line">      name:<span class="string">'home'</span>,</span><br><span class="line">      path:<span class="string">'/Home'</span>,</span><br><span class="line">      component:Home</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      name:<span class="string">'course'</span>,</span><br><span class="line">      path:<span class="string">'/Course'</span>,</span><br><span class="line">      component:Course</span><br><span class="line">    &#125;,</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 导出router</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure>
<h3 id="新建components文件夹"><a href="#新建components文件夹" class="headerlink" title="新建components文件夹"></a>新建components文件夹</h3><p>说明：此文件夹存放所有的组件<br><img src="https://img-blog.csdnimg.cn/2019120411095324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="Home-vue代码"><a href="#Home-vue代码" class="headerlink" title="Home.vue代码"></a>Home.vue代码</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;我是首页&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    name:<span class="string">'Home'</span>,</span><br><span class="line">    data()&#123;</span><br><span class="line">      <span class="keyword">return</span>&#123;</span><br><span class="line">        </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;style&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure>
<h4 id="Course-vue代码"><a href="#Course-vue代码" class="headerlink" title="Course.vue代码"></a>Course.vue代码</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;我是免费课程&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    name:<span class="string">'Course'</span>,</span><br><span class="line">    data()&#123;</span><br><span class="line">      <span class="keyword">return</span>&#123;</span><br><span class="line">        </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;style&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure>
<h3 id="修改App-vue文件"><a href="#修改App-vue文件" class="headerlink" title="修改App.vue文件"></a>修改App.vue文件</h3><p>说明：在App.vue文件中添加如下内容</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">    &lt;img src=<span class="string">"./assets/logo.png"</span>&gt;</span><br><span class="line">    &lt;h1&gt;&#123;&#123; msg &#125;&#125;&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;router-link :to="&#123;name:'Home'&#125;"&gt;首页&lt;/</span>router-link&gt;</span><br><span class="line">    &lt;router-link :to=<span class="string">"&#123;name:'Course'&#125;"</span>&gt;免费课程&lt;<span class="regexp">/router-link&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;!-- 路由匹配到的组件将显示在这里 --&gt;</span></span><br><span class="line"><span class="regexp">    &lt;router-view&gt;&lt;/</span>router-view&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br></pre></td></tr></table></figure>
<h3 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h3><p><img src="https://img-blog.csdnimg.cn/20191204111941283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
  </entry>
  <entry>
    <title>vue init时报错</title>
    <url>/2019/12/03/vue-init%E6%97%B6%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<p>执行如下代码抛错：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">vue init webpack-simple <span class="number">04</span>-my-project</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p><img src="https://img-blog.csdnimg.cn/2019120321044850.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>解决方案：<br> vue init 改为vue-init<br> 转载：<a href="https://blog.csdn.net/qq_39513971/article/details/79408684" target="_blank" rel="noopener">https://blog.csdn.net/qq_39513971/article/details/79408684</a></p>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
  </entry>
  <entry>
    <title>vue -V不是内部或外部命令</title>
    <url>/2019/12/02/vue-V%E4%B8%8D%E6%98%AF%E5%86%85%E9%83%A8%E6%88%96%E5%A4%96%E9%83%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p>vue -V 不是内部或外部命令，也不是可运行的程序或批处理文件<br><img src="https://img-blog.csdnimg.cn/20191202223924116.png" alt="在这里插入图片描述"><br>那么面对此问题，该如何解决呢？</p>
<p>全局搜索<strong>vue.cmd</strong>，打开文件所在位置，将<strong>vue.cmd</strong>所在的<strong>路径</strong>添加到环境变量Path中，重新打开控制台，再次执行vue -V.即可<br><img src="https://img-blog.csdnimg.cn/20191202224024582.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>常见问题</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>webpack</title>
    <url>/2019/12/02/webpack/</url>
    <content><![CDATA[<h3 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h3><h5 id="全局安装webpack"><a href="#全局安装webpack" class="headerlink" title="全局安装webpack"></a>全局安装webpack</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">npm install webpack@<span class="number">3.12</span><span class="number">.0</span> -g</span><br></pre></td></tr></table></figure>

<h5 id="卸载webpack"><a href="#卸载webpack" class="headerlink" title="卸载webpack"></a>卸载webpack</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">npm  uninstall  webpack  -g</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h5 id="打包命令webpack"><a href="#打包命令webpack" class="headerlink" title="打包命令webpack"></a>打包命令webpack</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">webpack ./main.js ./bundle.js</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20191202203714976.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>webpack模块的使用</p>
<h6 id="nodejs安装"><a href="#nodejs安装" class="headerlink" title="nodejs安装"></a>nodejs安装</h6><h6 id="npm-init-–yes-默认生成一个-package-json-管理整个项目中的包"><a href="#npm-init-–yes-默认生成一个-package-json-管理整个项目中的包" class="headerlink" title="npm init –yes 默认生成一个 package.json(管理整个项目中的包)"></a>npm init –yes 默认生成一个 package.json(管理整个项目中的包)</h6>]]></content>
      <categories>
        <category>webpack</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客换电脑如何维护</title>
    <url>/2019/11/29/hexo%E5%8D%9A%E5%AE%A2%E6%8D%A2%E7%94%B5%E8%84%91%E5%A6%82%E4%BD%95%E7%BB%B4%E6%8A%A4/</url>
    <content><![CDATA[<p><strong>前言</strong>：我们使用hexo+github搭建的博客，源代码文件都在本地，如果我们电脑出现问题或者其他情况，需要换电脑维护博客，该怎么办？</p>
<h2 id="方式一-拷贝文件"><a href="#方式一-拷贝文件" class="headerlink" title="方式一 拷贝文件"></a>方式一 拷贝文件</h2><p>把你本地的源代码，拷贝到其他电脑，安装必须的环境，即可。</p>
<a id="more"></a>
<h2 id="方式二-借助github实现多终端维护博客"><a href="#方式二-借助github实现多终端维护博客" class="headerlink" title="方式二 借助github实现多终端维护博客"></a>方式二 借助github实现多终端维护博客</h2><h3 id="在github上创建分支"><a href="#在github上创建分支" class="headerlink" title="在github上创建分支"></a>在github上创建分支</h3><p><img src="https://img-blog.csdnimg.cn/20191129112553846.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="上传源代码"><a href="#上传源代码" class="headerlink" title="上传源代码"></a>上传源代码</h3><p>把新建的分支克隆至本地，只保留.git，其他全部删除，将hexo源代码拷贝至此，我直接将整个文件夹放到这里了,然后重新上传代码，设置分支为hexo_blog<br><img src="https://img-blog.csdnimg.cn/20191129114412442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191129114819425.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="查看源代码"><a href="#查看源代码" class="headerlink" title="查看源代码"></a>查看源代码</h3><p><img src="https://img-blog.csdnimg.cn/20191129114032148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="本地启动"><a href="#本地启动" class="headerlink" title="本地启动"></a>本地启动</h3><p>现在你可以在当前文件夹下，打开power shell<br><img src="https://img-blog.csdnimg.cn/20191129113459883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>本地启动成功，然后修改你的博客，即可</p>
<h3 id="同步至github"><a href="#同步至github" class="headerlink" title="同步至github"></a>同步至github</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">hexo clean  # 清理缓存</span><br><span class="line">hexo g -d   # 生成并发布</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20191129115346713.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>此时可以看到我们前面修改的代码已经提交至master分支了，使用你自己的github来访问就可以了，<a href="https://fengjunhong.github.io/">我的博客</a></p>
<h3 id="提交源代码"><a href="#提交源代码" class="headerlink" title="提交源代码"></a>提交源代码</h3><p>前面我们只是更新了master分支的数据<br>更新源代码：借助GitHub Desktop上传源代码至hexo_blog分支即可。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>其实就是master分支存储显示文件，hexo_blog分支存储源代码文件</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
  </entry>
  <entry>
    <title>第一篇日记</title>
    <url>/2019/11/29/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>个人日记</category>
      </categories>
      <tags>
        <tag>个人日记</tag>
      </tags>
  </entry>
  <entry>
    <title>vue个人笔记总结</title>
    <url>/2019/11/28/vue%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h3 id="es6的用法"><a href="#es6的用法" class="headerlink" title="es6的用法"></a>es6的用法</h3><h4 id="let"><a href="#let" class="headerlink" title="let"></a>let</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">特点：</span><br><span class="line"><span class="number">1</span>、局部作用域</span><br><span class="line"><span class="number">2</span>、不会存在变量提升</span><br><span class="line"><span class="number">3</span>、变量不能重复声明</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="const"><a href="#const" class="headerlink" title="const"></a>const</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">特点：</span><br><span class="line"><span class="number">1</span>、局部作用域</span><br><span class="line"><span class="number">2</span>、不会存在变量提升</span><br><span class="line"><span class="number">3</span>、不能重复声明,只声明常量,不可变的量</span><br></pre></td></tr></table></figure>
<h3 id="vue的介绍"><a href="#vue的介绍" class="headerlink" title="vue的介绍"></a>vue的介绍</h3><h4 id="vue的基本引入和创建"><a href="#vue的基本引入和创建" class="headerlink" title="vue的基本引入和创建"></a>vue的基本引入和创建</h4><p>1.下载</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>2.引包</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">"./vue.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>3.实例化</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 3、实例化对象</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">      el:<span class="string">"#app"</span>, <span class="comment">// 绑定那块地</span></span><br><span class="line">      data:&#123;</span><br><span class="line">           name:<span class="string">"冯绍峰"</span>,</span><br><span class="line">           msg:<span class="string">"黄瓜"</span></span><br><span class="line">       &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h4 id="Vue的模板语法"><a href="#Vue的模板语法" class="headerlink" title="Vue的模板语法"></a>Vue的模板语法</h4><p>可以插入任何你想插入的内容,除了if else ,if else用三元运算符代替</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--模板语法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; 'haha' &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; 1+1 &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; &#123;'name':'alex'&#125; &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; person.name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; 1&gt;2 ? '真的' : '假的' &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; msg.split('').reverse().join('') &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="vue的指令系统"><a href="#vue的指令系统" class="headerlink" title="vue的指令系统"></a>vue的指令系统</h4><p>v-text和v-html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">v-text 相当于innerText</span><br><span class="line">v-html 相当于innerHtml</span><br></pre></td></tr></table></figure>

<p>v-if 和v-show</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">v-show 相当于 style.display</span><br></pre></td></tr></table></figure>

<p>v-if 和 v-show的区别</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">v-<span class="keyword">if</span> 是“真正”的条件渲染，因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建。</span><br><span class="line"></span><br><span class="line">v-<span class="keyword">if</span> 也是惰性的：如果在初始渲染时条件为假，则什么也不做——直到条件第一次变为真时，才会开始渲染条件块。</span><br><span class="line"></span><br><span class="line">相比之下，v-show 就简单得多——不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 进行切换。</span><br><span class="line"></span><br><span class="line">一般来说，v-<span class="keyword">if</span> 有更高的切换开销，而 v-show 有更高的初始渲染开销。因此，如果需要非常频繁地切换，则使用 v-show 较好；如果在运行时条件很少改变，则使用 v-<span class="keyword">if</span> 较好。</span><br></pre></td></tr></table></figure>

<p>v-bind 和 v-on</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">v-bind 可以绑定标签中任何属性</span><br><span class="line">v-on   可以监听js中所有事件</span><br></pre></td></tr></table></figure>

<p>v-bind</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">"app"</span> &gt;</span><br><span class="line">        &lt;img v-bind:src=<span class="string">"imgSrc"</span> v-bin:alt=<span class="string">"error"</span>&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;!--1、引包--&gt;</span></span><br><span class="line"><span class="regexp">&lt;script src="./</span>vue.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script&gt;</span></span><br><span class="line"><span class="string">    //数据驱动视图  设计模式 MVVM Model View ViewModel</span></span><br><span class="line"><span class="string">    new Vue(&#123;</span></span><br><span class="line">        el:"#app",</span><br><span class="line">        data() &#123;</span><br><span class="line">            <span class="comment">// data是一个函数 函数中return一个对象，可以是空对象 但不能不return</span></span><br><span class="line">            <span class="keyword">return</span>&#123;</span><br><span class="line">                imgSrc:<span class="string">"1.jpg"</span>,</span><br><span class="line">                error:<span class="string">"美女校花"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br></pre></td></tr></table></figure>

<p>v-on</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!-<span class="number">-1</span>、引包--&gt;</span><br><span class="line">&lt;script src=<span class="string">"./vue.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;style&gt;</span><br><span class="line">    .box &#123;</span><br><span class="line">        width: <span class="number">500</span>px;</span><br><span class="line">        height: <span class="number">300</span>px;</span><br><span class="line">        background-color: red;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">&lt;div id="content"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button v-on:click="handlerClick" v-text="btn_isShow"&gt;&lt;/</span>button&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"box"</span> v-show=<span class="string">'isShow'</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;script src="vue.js"&gt;&lt;/</span>script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">"#content"</span>,</span><br><span class="line">        data() &#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                msg: <span class="string">"&lt;h2 style='color: blue;'&gt;alex&lt;/h2&gt;"</span>,</span><br><span class="line">                isShow: <span class="literal">true</span>,</span><br><span class="line">                btn_isShow:<span class="string">"隐藏"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            handlerClick() &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">this</span>.isShow==<span class="literal">true</span>)&#123;</span><br><span class="line">                    <span class="keyword">this</span>.btn_isShow=<span class="string">"显示"</span></span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">this</span>.btn_isShow=<span class="string">"隐藏"</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">this</span>.isShow = !<span class="keyword">this</span>.isShow</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br></pre></td></tr></table></figure>

<h4 id="组件之间的传值"><a href="#组件之间的传值" class="headerlink" title="组件之间的传值"></a>组件之间的传值</h4><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-zqrnkhV4-1574906191338)(C:\Users\Mr.Feng\AppData\Roaming\Typora\typora-user-images\image-20191120212450590.png)]</p>
<ul>
<li>父组件向子组件传值</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:v-bind</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">App</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--1、引包--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">'Vbtn'</span>,&#123;</span></span><br><span class="line">        data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;&#125;</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        props: [<span class="string">'id'</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template:`<span class="tag">&lt;<span class="name">button</span>&gt;</span></span><span class="template-variable">&#123;&#123; id &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">button</span>&gt;</span>`</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> Vheader=&#123;</span></span><br><span class="line">        data()&#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;&#125;</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">         <span class="comment">//只要声明了父组件的属性，就可以使用</span></span></span><br><span class="line"><span class="actionscript">        props:[<span class="string">'msg'</span>,],</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template:`<span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><span class="template-variable">&#123;&#123; msg &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">                   `</span><br><span class="line">        ,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">//1、声子</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> App = &#123;</span></span><br><span class="line">        data()&#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="actionscript">                text:<span class="string">"我是父组件的数据"</span>,</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="handlebars"><span class="xml">        template: `<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"a"</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">Vheader</span> <span class="attr">:msg</span>=<span class="string">"text"</span>&gt;</span><span class="tag">&lt;/<span class="name">Vheader</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">                    `</span><br><span class="line">        ,</span><br><span class="line">        components: &#123;</span><br><span class="line">            Vheader</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line">        data()&#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="actionscript">                msg:<span class="string">"alex"</span>,</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        components:&#123;</span><br><span class="line"><span class="actionscript">            <span class="comment">//2、挂子</span></span></span><br><span class="line">            App</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>子组件向父组件传值</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:v-bind</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">App</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--1、引包--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">'Vbtn'</span>,&#123;</span></span><br><span class="line">        data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;&#125;</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        props: [<span class="string">'id'</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template:`<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"clickHandler"</span>&gt;</span></span><span class="template-variable">&#123;&#123; id &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">button</span>&gt;</span>`,</span></span></span><br><span class="line">        methods:&#123;</span><br><span class="line">            clickHandler()&#123;</span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.id++</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//每个组件中的指的基当期组件对象</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="keyword">this</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//this.$emit('父组件声明自定义的事件','传值')</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.$emit(<span class="string">"clickHandler"</span>,<span class="keyword">this</span>.id)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> Vheader=&#123;</span></span><br><span class="line">        data()&#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;&#125;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        created() &#123;</span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="keyword">this</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        props:[<span class="string">'msg'</span>,<span class="string">'post'</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template:`<span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><span class="template-variable">&#123;&#123; msg &#125;&#125;</span><span class="xml">:</span><span class="template-variable">&#123;&#123; post.id &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><span class="template-variable">&#123;&#123; post.title &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">Vbtn</span> <span class="attr">:id</span>=<span class="string">"post.id"</span> @<span class="attr">clickHandler</span>=<span class="string">"clickHandler"</span>&gt;</span><span class="tag">&lt;/<span class="name">Vbtn</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">                   `</span><br><span class="line">        ,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            clickHandler(val)&#123;</span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.$emit(<span class="string">"click_handler"</span>,val)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">//1、声子</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> App = &#123;</span></span><br><span class="line">        data()&#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="actionscript">                text:<span class="string">"我是父组件的数据"</span>,</span></span><br><span class="line">                post: &#123;</span><br><span class="line">                      id: 1,</span><br><span class="line"><span class="actionscript">                      title: <span class="string">'My Journey with Vue'</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        created() &#123;</span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="keyword">this</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="handlebars"><span class="xml">        template: `<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"a"</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        我是父组件的 </span><span class="template-variable">&#123;&#123; post.id &#125;&#125;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">Vheader</span> <span class="attr">:msg</span>=<span class="string">"text"</span> <span class="attr">:post</span>=<span class="string">"post"</span> @<span class="attr">click_handler</span>=<span class="string">"click_handler"</span>&gt;</span><span class="tag">&lt;/<span class="name">Vheader</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">                    `</span><br><span class="line">        ,</span><br><span class="line">        components: &#123;</span><br><span class="line">            Vheader</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            click_handler(val)&#123;</span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.post.id=val</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line">        data()&#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="actionscript">                msg:<span class="string">"alex"</span>,</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        created() &#123;</span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="keyword">this</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line">        components:&#123;</span><br><span class="line"><span class="actionscript">            <span class="comment">//2、挂子</span></span></span><br><span class="line">            App</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>平行组件之间的传值</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:v-bind</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">first</span>&gt;</span><span class="tag">&lt;/<span class="name">first</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">second</span>&gt;</span><span class="tag">&lt;/<span class="name">second</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--1、引包--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//声明全局Vue对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> bus=<span class="keyword">new</span> Vue()</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//组件二</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"second"</span>,&#123;</span></span><br><span class="line">        data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="actionscript">                text:<span class="string">""</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        created()&#123;</span><br><span class="line"><span class="actionscript">            bus.$on(<span class="string">'testData'</span>,(val)=&gt;&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="keyword">this</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.text=val</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="handlebars"><span class="xml">        template: `<span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><span class="template-variable">&#123;&#123; text &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span>`</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//组件一</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"first"</span>,&#123;</span></span><br><span class="line">        data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="actionscript">                msg:<span class="string">"我是组件1️⃣"</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="handlebars"><span class="xml">        template:`<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"clickHandler"</span>&gt;</span>数据迁移<span class="tag">&lt;/<span class="name">button</span>&gt;</span>`,</span></span></span><br><span class="line">        methods:&#123;</span><br><span class="line">            clickHandler()&#123;</span><br><span class="line"><span class="actionscript">                bus.$emit(<span class="string">"testData"</span>,<span class="keyword">this</span>.msg)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="actionscript">    <span class="comment">//创建Vue实例</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line">        data()&#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;&#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="生命周期钩子函数"><a href="#生命周期钩子函数" class="headerlink" title="生命周期钩子函数"></a>生命周期钩子函数</h4><ul>
<li><p>beforeCreate  组件创建之前</p>
</li>
<li><p>created           组件创建之后</p>
</li>
<li><p>beforeMount   组件挂载之前</p>
</li>
<li><p>mounted         组件挂载之后</p>
<p> [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-2WDmruFs-1574906191341)(C:\Users\Mr.Feng\AppData\Roaming\Typora\typora-user-images\image-20191121222550856.png)]</p>
</li>
<li><p>beforeUpdate </p>
</li>
<li><p>updated </p>
</li>
<li><p>activated       </p>
<p>   激活当前组件</p>
</li>
<li><p>deactivated     </p>
<p>​    keep- alive Vue提供的内置组件，主要作用 ,让组件产生缓存</p>
</li>
</ul>
<p>​    停用当前组件</p>
<ul>
<li><p>beforeDestroy   </p>
</li>
<li><p>destroyed     </p>
</li>
</ul>
<p>​    如果开了定时器,一定要关闭定时器、</p>
<h4 id="vue-router的基本使用"><a href="#vue-router的基本使用" class="headerlink" title="vue-router的基本使用"></a>vue-router的基本使用</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span>        </span><br><span class="line">            <span class="tag">&lt;<span class="name">App</span>/&gt;</span>   </span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"vue-router.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span>    </span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> Home = &#123;        </span></span><br><span class="line">                data()&#123;            </span><br><span class="line"><span class="actionscript">                    <span class="keyword">return</span>&#123;&#125;        </span></span><br><span class="line">                &#125;,        </span><br><span class="line"><span class="handlebars"><span class="xml">                template: `<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是主页<span class="tag">&lt;/<span class="name">div</span>&gt;</span>`    </span></span></span><br><span class="line">            &#125;    </span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> Course = &#123;        </span></span><br><span class="line">                data()&#123;            </span><br><span class="line"><span class="actionscript">                    <span class="keyword">return</span>&#123;&#125;        </span></span><br><span class="line">                &#125;,        </span><br><span class="line"><span class="handlebars"><span class="xml">                template: `<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是免费课程<span class="tag">&lt;/<span class="name">div</span>&gt;</span>`    </span></span></span><br><span class="line">            &#125;    </span><br><span class="line"><span class="actionscript">            <span class="comment">// 创建router实例    </span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;        </span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 定义router规则        </span></span></span><br><span class="line">                routes:[            </span><br><span class="line">                    &#123;               </span><br><span class="line"><span class="actionscript">                        path:<span class="string">'/'</span>,                </span></span><br><span class="line">                        component : Home            </span><br><span class="line">                    &#125;,            </span><br><span class="line">                    &#123;                </span><br><span class="line"><span class="actionscript">                        path:<span class="string">'/Course'</span>,                </span></span><br><span class="line">                        component : Course            </span><br><span class="line">                    &#125;        </span><br><span class="line">                ]    </span><br><span class="line">            &#125;)    </span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> App = &#123;        </span></span><br><span class="line">                data() &#123;            </span><br><span class="line"><span class="actionscript">                    <span class="keyword">return</span> &#123;&#125;        </span></span><br><span class="line">                &#125;,        </span><br><span class="line"><span class="handlebars"><span class="xml">                template: `<span class="tag">&lt;<span class="name">div</span>&gt;</span>                        </span></span></span><br><span class="line"><span class="javascript">                            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"header"</span>&gt;                            </span></span><br><span class="line"><span class="handlebars"><span class="xml">                                <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span>                            </span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                                <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/Course"</span>&gt;</span>免费课程<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span>                        						  <span class="tag">&lt;/<span class="name">div</span>&gt;</span>                        </span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                              <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span>                   </span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            			   <span class="tag">&lt;/<span class="name">div</span>&gt;</span>                  </span></span></span><br><span class="line">						`,    </span><br><span class="line">            &#125;    </span><br><span class="line"><span class="actionscript">            <span class="keyword">new</span> Vue(&#123;        </span></span><br><span class="line"><span class="actionscript">                el : <span class="string">"#app"</span>,        </span></span><br><span class="line">                router,        </span><br><span class="line">                data()&#123;            </span><br><span class="line"><span class="actionscript">                    <span class="keyword">return</span>&#123;&#125;        </span></span><br><span class="line">                &#125;,        </span><br><span class="line">                components:&#123;            </span><br><span class="line">                    App        </span><br><span class="line">                &#125;    </span><br><span class="line">            &#125;)<span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="命名路由"><a href="#命名路由" class="headerlink" title="命名路由"></a>命名路由</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">routes:[    # 定义路由规则</span><br><span class="line">    &#123;        </span><br><span class="line">        path:<span class="string">'/dfssf'</span>,        </span><br><span class="line">        name:<span class="string">'Home'</span>,        </span><br><span class="line">        component : Home    </span><br><span class="line">    &#125;,    </span><br><span class="line">    &#123;        </span><br><span class="line">        path:<span class="string">'/Coursedddddddddddddddddd'</span>,        </span><br><span class="line">        name:<span class="string">'Course'</span>,        </span><br><span class="line">        component : Course    </span><br><span class="line">    &#125;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">template: <span class="string">`&lt;div&gt;</span></span><br><span class="line"><span class="string">                &lt;div class="header"&gt;</span></span><br><span class="line"><span class="string">                    &lt;router-link :to="&#123;name:'Home'&#125;"&gt;首页&lt;/router-link&gt;</span></span><br><span class="line"><span class="string">                    &lt;router-link :to="&#123;name:'Course'&#125;"&gt;免费课程&lt;/router-link&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;router-view&gt;&lt;/router-view&gt;</span></span><br><span class="line"><span class="string">		 &lt;/div&gt;</span></span><br><span class="line"><span class="string">		`</span>,</span><br></pre></td></tr></table></figure>

<h4 id="动态路由匹配"><a href="#动态路由匹配" class="headerlink" title="动态路由匹配"></a>动态路由匹配</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">提醒一下，当使用路由参数时，例如从 /user/foo 导航到 /user/bar，原来的组件实例会被复用。因为两个路由都渲染同个组件，比起销毁再创建，复用则显得更加高效。不过，这也意味着组件的生命周期钩子不会再被调用。</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">created()&#123;     </span><br><span class="line">    <span class="keyword">this</span>.user_id = <span class="keyword">this</span>.$route.params.id   <span class="comment">//因此使用此方法，无法获取用户的id</span></span><br><span class="line">    consolo.log(<span class="keyword">this</span>.$route)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>复用组件时，想对路由参数的变化作出响应的话，你可以简单地 watch (监测变化) $route 对象：</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">watch: &#123;</span><br><span class="line">    <span class="string">'$route'</span> (to, <span class="keyword">from</span>) &#123;</span><br><span class="line">      <span class="comment">// 对路由变化作出响应...</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMTEvMjgvYnFLa0VmclZCTzF0VElDLnBuZw?x-oss-process=image/format,png" alt="image-20191125231714548.png"></p>
<h4 id="编程式的导航"><a href="#编程式的导航" class="headerlink" title="编程式的导航"></a>编程式的导航</h4>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo个人博客的细节优化</title>
    <url>/2019/11/27/hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E7%BB%86%E8%8A%82%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<h2 id="添加分享功能"><a href="#添加分享功能" class="headerlink" title="添加分享功能"></a>添加分享功能</h2><p>找到主题配置文件（\themes \ next \ _config.yml）,如下修改即可</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">baidushare: </span><br><span class="line">  type: button</span><br><span class="line">  baidushare: <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="修改文章间距"><a href="#修改文章间距" class="headerlink" title="修改文章间距"></a>修改文章间距</h2><p>找到 \themes \ next \ source \ css \ _custom \ _custom.styl</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">.post &#123;</span><br><span class="line">   margin-top: 0px;    # 上外边距</span><br><span class="line">   margin-bottom: 60px;  # 下外边距</span><br><span class="line">   padding: <span class="number">25</span>px;</span><br><span class="line">   -webkit-box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">5</span>px rgba(<span class="number">202</span>, <span class="number">203</span>, <span class="number">203</span>, <span class="number">.5</span>);</span><br><span class="line">   -moz-box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">5</span>px rgba(<span class="number">202</span>, <span class="number">203</span>, <span class="number">204</span>, <span class="number">.5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Next官网：<a href="http://theme-next.iissnan.com/theme-settings.html#syntax-highlight-scheme" target="_blank" rel="noopener">Next官网链接</a></p>
<h2 id="修改内容区域的宽度"><a href="#修改内容区域的宽度" class="headerlink" title="修改内容区域的宽度"></a>修改内容区域的宽度</h2><p>next主题的默认宽度（width：700px）如下图所示，太窄<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMTEvMjgvV3lMb1JReEdpWjVQU0ROLnBuZw?x-oss-process=image/format,png" alt="001.png"><br>打开 \themes \ next \ source \ css \ _variables \ custom.styl 添加两行代码即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 路径：\themes\next\source\css\_variables\custom.styl</span></span><br><span class="line"><span class="variable">$main</span>-desktop = 1200px </span><br><span class="line"><span class="variable">$content</span>-desktop = 900px</span><br></pre></td></tr></table></figure>
<p>看效果，此时width: 900px<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMTEvMjgvbzZENGtnZnZXckhTalA1LnBuZw?x-oss-process=image/format,png" alt="005.png"></p>
<h2 id="创建分类和标签"><a href="#创建分类和标签" class="headerlink" title="创建分类和标签"></a>创建分类和标签</h2><h3 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h3><p>以下讲解tags和categories，其他同上</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: <span class="regexp">/</span></span><br><span class="line"><span class="regexp">  #about: /</span>about/ || user</span><br><span class="line">  categories: <span class="regexp">/categories/</span>  <span class="comment">// 标签</span></span><br><span class="line">  archives: <span class="regexp">/archives/</span> || archive</span><br><span class="line">  tags: <span class="regexp">/tags/</span>  <span class="comment">//分类</span></span><br></pre></td></tr></table></figure>
<h3 id="创建categories文件和tags文件"><a href="#创建categories文件和tags文件" class="headerlink" title="创建categories文件和tags文件"></a>创建categories文件和tags文件</h3><p><img src="https://img-blog.csdnimg.cn/20191127100210425.png" alt="在这里插入图片描述"></p>
<h3 id="修改xxx-index文件"><a href="#修改xxx-index文件" class="headerlink" title="修改xxx.index文件"></a>修改xxx.index文件</h3><p>路径：在博客根目录source文件夹下</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// categories/index.md的文件内容如下：</span></span><br><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: <span class="number">2019</span><span class="number">-11</span><span class="number">-26</span> <span class="number">17</span>:<span class="number">14</span>:<span class="number">17</span></span><br><span class="line">type: <span class="string">"categories"</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// tags/index.md的文件内容如下：</span></span><br><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: <span class="number">2019</span><span class="number">-11</span><span class="number">-26</span> <span class="number">17</span>:<span class="number">14</span>:<span class="number">17</span></span><br><span class="line">type: <span class="string">"tags"</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h3 id="修改文章内容"><a href="#修改文章内容" class="headerlink" title="修改文章内容"></a>修改文章内容</h3><p>找到你要加标签和分类的文章</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">title: 薛之谦-演员</span><br><span class="line">top: </span><br><span class="line">    <span class="literal">true</span></span><br><span class="line">categories: 娱乐</span><br><span class="line">tags:</span><br><span class="line">    - 歌曲</span><br></pre></td></tr></table></figure>
<h2 id="自动更换背景图"><a href="#自动更换背景图" class="headerlink" title="自动更换背景图"></a>自动更换背景图</h2><p>路径: 找到\themes\next\source\css_custom\custom.styl，如下修改内容</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 自动更换背景</span></span><br><span class="line">body &#123;</span><br><span class="line">    <span class="comment">//background:url(https://source.unsplash.com/random/1600x900);</span></span><br><span class="line">    background-repeat: no-repeat;</span><br><span class="line">    background-attachment:fixed;</span><br><span class="line">    background-position:<span class="number">50</span>% <span class="number">50</span>%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="创建右上角github入口"><a href="#创建右上角github入口" class="headerlink" title="创建右上角github入口"></a>创建右上角github入口</h2><p>找到\themes\next\layout\ _layout.swig文件</p>
<p>将以下内容添加至, &lt;div class=”headband”&gt;&lt;/div&gt;下面一行</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;a href=<span class="string">"https://your-url"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"github-corner"</span> aria-label=<span class="string">"View source on GitHub"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">width</span>=<span class="string">"80"</span> <span class="attr">height</span>=<span class="string">"80"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 250 250"</span> <span class="attr">style</span>=<span class="string">"fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2"</span> <span class="attr">fill</span>=<span class="string">"currentColor"</span> <span class="attr">style</span>=<span class="string">"transform-origin: 130px 106px;"</span> <span class="attr">class</span>=<span class="string">"octo-arm"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z"</span> <span class="attr">fill</span>=<span class="string">"currentColor"</span> <span class="attr">class</span>=<span class="string">"octo-body"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"><span class="selector-class">.github-corner</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.octo-arm</span>&#123;<span class="attribute">animation</span>:octocat-wave <span class="number">560ms</span> ease-in-out&#125;@<span class="keyword">keyframes</span> octocat-wave&#123;0%,100%&#123;<span class="attribute">transform</span>:<span class="built_in">rotate</span>(0)&#125;20%,60%&#123;<span class="attribute">transform</span>:<span class="built_in">rotate</span>(-25deg)&#125;40%,80%&#123;<span class="attribute">transform</span>:<span class="built_in">rotate</span>(10deg)&#125;&#125;@<span class="keyword">media</span> (max-width:<span class="number">500px</span>)&#123;<span class="selector-class">.github-corner</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.octo-arm</span>&#123;<span class="attribute">animation</span>:none&#125;<span class="selector-class">.github-corner</span> <span class="selector-class">.octo-arm</span>&#123;<span class="attribute">animation</span>:octocat-wave <span class="number">560ms</span> ease-in-out&#125;&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<h2 id="侧边栏社交小图标设置"><a href="#侧边栏社交小图标设置" class="headerlink" title="侧边栏社交小图标设置"></a>侧边栏社交小图标设置</h2><p><img src="https://img-blog.csdnimg.cn/20191129143914153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 打开主题配置文件（_config.yml），搜索social_icons:,在fontawesome图标库（<a href="https://fontawesome.com/" target="_blank" rel="noopener">网址</a>）找自己喜欢的小图标，并将名字复制在如下位置配置文件 </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">  GitHub: https:<span class="comment">//github.com/yourname || github</span></span><br><span class="line">  E-Mail: mailto:邮箱地址 || envelo</span><br><span class="line">  Weibo: https:<span class="comment">//weibo.com/yourname || weibo</span></span><br><span class="line">  CSDN: https:<span class="comment">//me.csdn.net/yourname || book</span></span><br></pre></td></tr></table></figure>

<h2 id="设置版权声明"><a href="#设置版权声明" class="headerlink" title="设置版权声明"></a>设置版权声明</h2><p>实现下图效果<br><img src="https://img-blog.csdnimg.cn/20191129174135686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="站点配置文件"><a href="#站点配置文件" class="headerlink" title="站点配置文件"></a>站点配置文件</h3><p>找到站点配置文件,把url改为你自己的github访问路径<br><img src="https://img-blog.csdnimg.cn/20191129174342110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="主题配置文件"><a href="#主题配置文件" class="headerlink" title="主题配置文件"></a>主题配置文件</h3><p>找到主题配置文件，新增或修改为如下代码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># 开启版权声明</span><br><span class="line"># Declare license on posts</span><br><span class="line">post_copyright:</span><br><span class="line">  enable: true  # 是否开启</span><br><span class="line">  license: CC BY-NC-SA <span class="number">3.0</span></span><br><span class="line">  license_url: https:<span class="comment">//creativecommons.org/licenses/by-nc-sa/3.0/</span></span><br></pre></td></tr></table></figure>
<h2 id="添加顶部加载条"><a href="#添加顶部加载条" class="headerlink" title="添加顶部加载条"></a>添加顶部加载条</h2><p>打开/themes/next/layout/_partials/head.swig文件，在maximum-scale=1”/&gt;后添加如下代码:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script   src=<span class="string">"//cdn.bootcss.com/pace/1.0.2/pace.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;link href=<span class="string">"//cdn.bootcss.com/pace/1.0.2/themes/pink/pace-theme-flash.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br></pre></td></tr></table></figure>
<p>但是，默认的是粉色的，要改变颜色可以在/themes/next/layout/_partials/head.swig文件中添加如下代码（接在刚才link的后面）</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .pace .pace-progress &#123;</span><br><span class="line">        background: #1E92FB; /*进度条颜色*/</span><br><span class="line">        height: <span class="number">3</span>px;</span><br><span class="line">    &#125;</span><br><span class="line">    .pace .pace-progress-inner &#123;</span><br><span class="line">         box-shadow: 0 0 10px #1E92FB, 0 0 5px     #1E92FB; /*阴影颜色*/</span><br><span class="line">    &#125;</span><br><span class="line">    .pace .pace-activity &#123;</span><br><span class="line">        border-top-color: #1E92FB;    /*上边框颜色*/</span><br><span class="line">        border-left-color: #1E92FB;    /*左边框颜色*/</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
  </entry>
  <entry>
    <title>使用hexo和github搭建个人博客</title>
    <url>/2019/11/26/hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h5 id="问题一："><a href="#问题一：" class="headerlink" title="问题一："></a>问题一：</h5><p>nrm : 无法加载文件 C:\Users\TANG\AppData\Roaming\npm\nrm.ps1，因为在此系统上禁止运行脚本。</p>
<h6 id="处理方式："><a href="#处理方式：" class="headerlink" title="处理方式："></a>处理方式：</h6><p> <a href="https://www.cnblogs.com/lingblog/p/11845011.html" target="_blank" rel="noopener">https://www.cnblogs.com/lingblog/p/11845011.html</a> </p>
<h3 id="搭建博客步骤"><a href="#搭建博客步骤" class="headerlink" title="搭建博客步骤"></a>搭建博客步骤</h3><p><strong>GitHub创建个人仓库</strong></p>
<p>登录到GitHub,如果没有GitHub帐号，使用你的邮箱注册GitHub帐号：<a href="http://link.zhihu.com/?target=https%3A//github.com/">Build software better, together</a> 点击GitHub中的New repository创建新仓库，仓库名应该为：<strong>用户名</strong>.<a href="http://link.zhihu.com/?target=http%3A//github.io">http://github.io</a> 这个<strong>用户名</strong>使用你的GitHub帐号名称代替，这是固定写法，比如我的仓库名为：<br><img src="https://img-blog.csdnimg.cn/20191128094057439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="github仓库名"><br>什么是Git ?简单来说Git是开源的分布式版本控制系统，用于敏捷高效地处理项目。我们网站在本地搭建好了，需要使用Git同步到GitHub上。如果想要了解Git的细节，参看<a href="http://link.zhihu.com/?target=http%3A//weibo.com/liaoxuefeng">廖雪峰</a>老师的Git教程：<a href="http://link.zhihu.com/?target=http%3A//www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000">Git教程</a> 从Git官网下载：<a href="http://link.zhihu.com/?target=https%3A//git-scm.com/download/win">Git - Downloading Package</a> 现在的机子基本都是64位的，选择64位的安装包，下载后安装，在命令行里输入git测试是否安装成功，若安装失败，参看其他详细的Git安装教程。安装成功后，将你的Git与GitHub帐号绑定，鼠标右击打开Git Bash</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMzLnpoaW1nLmNvbS81MC92Mi04YjFjYmUyNTNkNmUwMzAxYmQ5YTY4YzZmOThhOWY1Ml9oZC5qcGc?x-oss-process=image/format,png" alt="img"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">"你的GitHub用户名"</span></span><br><span class="line">git config --global user.email <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure>

<p>生成ssh密钥文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure>

<p>然后直接三个回车即可，默认不需要设置密码<br>然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制<br><img src="https://img-blog.csdnimg.cn/20191128094415435.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>新建SSH密钥<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMzLnpoaW1nLmNvbS81MC92Mi03MmEzZjIyYzA4MGU5OTM0M2MzY2M0YWFiY2UxMGUzY19oZC5qcGc?x-oss-process=image/format,png" alt="img"></p>
<p><strong>安装Node.js</strong></p>
<p>Hexo基于Node.js，Node.js下载地址：<a href="http://link.zhihu.com/?target=https%3A//nodejs.org/en/download/">Download | Node.js</a> 下载安装包，注意安装Node.js会包含环境变量及npm的安装，安装后，检测Node.js是否安装成功，在命令行中输入 node -v :</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMzLnpoaW1nLmNvbS81MC92Mi03NmVhMzhlOTU0NWU2MDZmOTc1NzgxZTQ3OTMzYjAxMF9oZC5qcGc?x-oss-process=image/format,png" alt="img"></p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMzLnpoaW1nLmNvbS81MC92Mi1iZWRlMjUwYjg0NTZkZjkyNDc1YjQ1NWZkYThjMWRkOV9oZC5qcGc?x-oss-process=image/format,png" alt="img"></p>
<p><strong>安装Hexo</strong></p>
<p>Hexo就是我们的个人博客网站的框架， 这里需要自己在电脑常里创建一个文件夹，可以命名为MyBlog，Hexo框架与以后你自己发布的网页都在这个文件夹中。创建好后，进入文件夹中，按住shift键，右击鼠标点击命令行</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWM0LnpoaW1nLmNvbS81MC92Mi1hNTQ1MGE0NjZjMDkyN2MyNWRmZjhhZDZmMWQyMDQ2Y19oZC5qcGc?x-oss-process=image/format,png" alt="img"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p> 这个安装时间较长耐心等待，安装完成后，初始化我们的博客，输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure>

<p>注意，这里的命令都是切换到<strong>blog文件夹</strong>中。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PS D:\MyProject\MyBlog&gt; <span class="built_in">cd</span> blog</span><br><span class="line">					  hexo new test_my_site</span><br><span class="line">					  hexo g  <span class="comment"># 生成</span></span><br><span class="line">					  hexo s  <span class="comment"># 启动服务</span></span><br></pre></td></tr></table></figure>

<p>这些命令在后面作介绍，完成后，打开浏览器输入地址：</p>
<p>localhost:4000</p>
<p>转载</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
</search>
