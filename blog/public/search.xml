<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>vue个人笔记总结</title>
    <url>/2019/11/28/vue%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h3 id="es6的用法"><a href="#es6的用法" class="headerlink" title="es6的用法"></a>es6的用法</h3><h4 id="let"><a href="#let" class="headerlink" title="let"></a>let</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">特点：</span><br><span class="line"><span class="number">1</span>、局部作用域</span><br><span class="line"><span class="number">2</span>、不会存在变量提升</span><br><span class="line"><span class="number">3</span>、变量不能重复声明</span><br></pre></td></tr></table></figure>

<h4 id="const"><a href="#const" class="headerlink" title="const"></a>const</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">特点：</span><br><span class="line"><span class="number">1</span>、局部作用域</span><br><span class="line"><span class="number">2</span>、不会存在变量提升</span><br><span class="line"><span class="number">3</span>、不能重复声明,只声明常量,不可变的量</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="vue的介绍"><a href="#vue的介绍" class="headerlink" title="vue的介绍"></a>vue的介绍</h3><h4 id="vue的基本引入和创建"><a href="#vue的基本引入和创建" class="headerlink" title="vue的基本引入和创建"></a>vue的基本引入和创建</h4><p>1.下载</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>2.引包</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">"./vue.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>3.实例化</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 3、实例化对象</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">      el:<span class="string">"#app"</span>, <span class="comment">// 绑定那块地</span></span><br><span class="line">      data:&#123;</span><br><span class="line">           name:<span class="string">"冯绍峰"</span>,</span><br><span class="line">           msg:<span class="string">"黄瓜"</span></span><br><span class="line">       &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h4 id="Vue的模板语法"><a href="#Vue的模板语法" class="headerlink" title="Vue的模板语法"></a>Vue的模板语法</h4><p>可以插入任何你想插入的内容,除了if else ,if else用三元运算符代替</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--模板语法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; 'haha' &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; 1+1 &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; &#123;'name':'alex'&#125; &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; person.name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; 1&gt;2 ? '真的' : '假的' &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; msg.split('').reverse().join('') &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="vue的指令系统"><a href="#vue的指令系统" class="headerlink" title="vue的指令系统"></a>vue的指令系统</h4><p>v-text和v-html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">v-text 相当于innerText</span><br><span class="line">v-html 相当于innerHtml</span><br></pre></td></tr></table></figure>

<p>v-if 和v-show</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">v-show 相当于 style.display</span><br></pre></td></tr></table></figure>

<p>v-if 和 v-show的区别</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">v-<span class="keyword">if</span> 是“真正”的条件渲染，因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建。</span><br><span class="line"></span><br><span class="line">v-<span class="keyword">if</span> 也是惰性的：如果在初始渲染时条件为假，则什么也不做——直到条件第一次变为真时，才会开始渲染条件块。</span><br><span class="line"></span><br><span class="line">相比之下，v-show 就简单得多——不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 进行切换。</span><br><span class="line"></span><br><span class="line">一般来说，v-<span class="keyword">if</span> 有更高的切换开销，而 v-show 有更高的初始渲染开销。因此，如果需要非常频繁地切换，则使用 v-show 较好；如果在运行时条件很少改变，则使用 v-<span class="keyword">if</span> 较好。</span><br></pre></td></tr></table></figure>

<p>v-bind 和 v-on</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">v-bind 可以绑定标签中任何属性</span><br><span class="line">v-on   可以监听js中所有事件</span><br></pre></td></tr></table></figure>

<p>v-bind</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">"app"</span> &gt;</span><br><span class="line">        &lt;img v-bind:src=<span class="string">"imgSrc"</span> v-bin:alt=<span class="string">"error"</span>&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;!--1、引包--&gt;</span></span><br><span class="line"><span class="regexp">&lt;script src="./</span>vue.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script&gt;</span></span><br><span class="line"><span class="string">    //数据驱动视图  设计模式 MVVM Model View ViewModel</span></span><br><span class="line"><span class="string">    new Vue(&#123;</span></span><br><span class="line">        el:"#app",</span><br><span class="line">        data() &#123;</span><br><span class="line">            <span class="comment">// data是一个函数 函数中return一个对象，可以是空对象 但不能不return</span></span><br><span class="line">            <span class="keyword">return</span>&#123;</span><br><span class="line">                imgSrc:<span class="string">"1.jpg"</span>,</span><br><span class="line">                error:<span class="string">"美女校花"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br></pre></td></tr></table></figure>

<p>v-on</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!-<span class="number">-1</span>、引包--&gt;</span><br><span class="line">&lt;script src=<span class="string">"./vue.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;style&gt;</span><br><span class="line">    .box &#123;</span><br><span class="line">        width: <span class="number">500</span>px;</span><br><span class="line">        height: <span class="number">300</span>px;</span><br><span class="line">        background-color: red;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">&lt;div id="content"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button v-on:click="handlerClick" v-text="btn_isShow"&gt;&lt;/</span>button&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"box"</span> v-show=<span class="string">'isShow'</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;script src="vue.js"&gt;&lt;/</span>script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">"#content"</span>,</span><br><span class="line">        data() &#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                msg: <span class="string">"&lt;h2 style='color: blue;'&gt;alex&lt;/h2&gt;"</span>,</span><br><span class="line">                isShow: <span class="literal">true</span>,</span><br><span class="line">                btn_isShow:<span class="string">"隐藏"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            handlerClick() &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">this</span>.isShow==<span class="literal">true</span>)&#123;</span><br><span class="line">                    <span class="keyword">this</span>.btn_isShow=<span class="string">"显示"</span></span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">this</span>.btn_isShow=<span class="string">"隐藏"</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">this</span>.isShow = !<span class="keyword">this</span>.isShow</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br></pre></td></tr></table></figure>

<h4 id="组件之间的传值"><a href="#组件之间的传值" class="headerlink" title="组件之间的传值"></a>组件之间的传值</h4><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-zqrnkhV4-1574906191338)(C:\Users\Mr.Feng\AppData\Roaming\Typora\typora-user-images\image-20191120212450590.png)]</p>
<ul>
<li>父组件向子组件传值</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:v-bind</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">App</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--1、引包--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">'Vbtn'</span>,&#123;</span></span><br><span class="line">        data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;&#125;</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        props: [<span class="string">'id'</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template:`<span class="tag">&lt;<span class="name">button</span>&gt;</span></span><span class="template-variable">&#123;&#123; id &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">button</span>&gt;</span>`</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> Vheader=&#123;</span></span><br><span class="line">        data()&#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;&#125;</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">         <span class="comment">//只要声明了父组件的属性，就可以使用</span></span></span><br><span class="line"><span class="actionscript">        props:[<span class="string">'msg'</span>,],</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template:`<span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><span class="template-variable">&#123;&#123; msg &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">                   `</span><br><span class="line">        ,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">//1、声子</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> App = &#123;</span></span><br><span class="line">        data()&#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="actionscript">                text:<span class="string">"我是父组件的数据"</span>,</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="handlebars"><span class="xml">        template: `<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"a"</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">Vheader</span> <span class="attr">:msg</span>=<span class="string">"text"</span>&gt;</span><span class="tag">&lt;/<span class="name">Vheader</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">                    `</span><br><span class="line">        ,</span><br><span class="line">        components: &#123;</span><br><span class="line">            Vheader</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line">        data()&#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="actionscript">                msg:<span class="string">"alex"</span>,</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        components:&#123;</span><br><span class="line"><span class="actionscript">            <span class="comment">//2、挂子</span></span></span><br><span class="line">            App</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>子组件向父组件传值</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:v-bind</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">App</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--1、引包--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">'Vbtn'</span>,&#123;</span></span><br><span class="line">        data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;&#125;</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        props: [<span class="string">'id'</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template:`<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"clickHandler"</span>&gt;</span></span><span class="template-variable">&#123;&#123; id &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">button</span>&gt;</span>`,</span></span></span><br><span class="line">        methods:&#123;</span><br><span class="line">            clickHandler()&#123;</span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.id++</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//每个组件中的指的基当期组件对象</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="keyword">this</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//this.$emit('父组件声明自定义的事件','传值')</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.$emit(<span class="string">"clickHandler"</span>,<span class="keyword">this</span>.id)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> Vheader=&#123;</span></span><br><span class="line">        data()&#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;&#125;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        created() &#123;</span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="keyword">this</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        props:[<span class="string">'msg'</span>,<span class="string">'post'</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template:`<span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><span class="template-variable">&#123;&#123; msg &#125;&#125;</span><span class="xml">:</span><span class="template-variable">&#123;&#123; post.id &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><span class="template-variable">&#123;&#123; post.title &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">Vbtn</span> <span class="attr">:id</span>=<span class="string">"post.id"</span> @<span class="attr">clickHandler</span>=<span class="string">"clickHandler"</span>&gt;</span><span class="tag">&lt;/<span class="name">Vbtn</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">                   `</span><br><span class="line">        ,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            clickHandler(val)&#123;</span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.$emit(<span class="string">"click_handler"</span>,val)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">//1、声子</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> App = &#123;</span></span><br><span class="line">        data()&#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="actionscript">                text:<span class="string">"我是父组件的数据"</span>,</span></span><br><span class="line">                post: &#123;</span><br><span class="line">                      id: 1,</span><br><span class="line"><span class="actionscript">                      title: <span class="string">'My Journey with Vue'</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        created() &#123;</span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="keyword">this</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="handlebars"><span class="xml">        template: `<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"a"</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        我是父组件的 </span><span class="template-variable">&#123;&#123; post.id &#125;&#125;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">Vheader</span> <span class="attr">:msg</span>=<span class="string">"text"</span> <span class="attr">:post</span>=<span class="string">"post"</span> @<span class="attr">click_handler</span>=<span class="string">"click_handler"</span>&gt;</span><span class="tag">&lt;/<span class="name">Vheader</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">                    `</span><br><span class="line">        ,</span><br><span class="line">        components: &#123;</span><br><span class="line">            Vheader</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            click_handler(val)&#123;</span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.post.id=val</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line">        data()&#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="actionscript">                msg:<span class="string">"alex"</span>,</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        created() &#123;</span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="keyword">this</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line">        components:&#123;</span><br><span class="line"><span class="actionscript">            <span class="comment">//2、挂子</span></span></span><br><span class="line">            App</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>平行组件之间的传值</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:v-bind</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">first</span>&gt;</span><span class="tag">&lt;/<span class="name">first</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">second</span>&gt;</span><span class="tag">&lt;/<span class="name">second</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--1、引包--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//声明全局Vue对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> bus=<span class="keyword">new</span> Vue()</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//组件二</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"second"</span>,&#123;</span></span><br><span class="line">        data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="actionscript">                text:<span class="string">""</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        created()&#123;</span><br><span class="line"><span class="actionscript">            bus.$on(<span class="string">'testData'</span>,(val)=&gt;&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="keyword">this</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.text=val</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="handlebars"><span class="xml">        template: `<span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><span class="template-variable">&#123;&#123; text &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span>`</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//组件一</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"first"</span>,&#123;</span></span><br><span class="line">        data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="actionscript">                msg:<span class="string">"我是组件1️⃣"</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="handlebars"><span class="xml">        template:`<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"clickHandler"</span>&gt;</span>数据迁移<span class="tag">&lt;/<span class="name">button</span>&gt;</span>`,</span></span></span><br><span class="line">        methods:&#123;</span><br><span class="line">            clickHandler()&#123;</span><br><span class="line"><span class="actionscript">                bus.$emit(<span class="string">"testData"</span>,<span class="keyword">this</span>.msg)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="actionscript">    <span class="comment">//创建Vue实例</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line">        data()&#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>&#123;&#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="生命周期钩子函数"><a href="#生命周期钩子函数" class="headerlink" title="生命周期钩子函数"></a>生命周期钩子函数</h4><ul>
<li><p>beforeCreate  组件创建之前</p>
</li>
<li><p>created           组件创建之后</p>
</li>
<li><p>beforeMount   组件挂载之前</p>
</li>
<li><p>mounted         组件挂载之后</p>
<p> [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-2WDmruFs-1574906191341)(C:\Users\Mr.Feng\AppData\Roaming\Typora\typora-user-images\image-20191121222550856.png)]</p>
</li>
<li><p>beforeUpdate </p>
</li>
<li><p>updated </p>
</li>
<li><p>activated       </p>
<p>   激活当前组件</p>
</li>
<li><p>deactivated     </p>
<p>​    keep- alive Vue提供的内置组件，主要作用 ,让组件产生缓存</p>
</li>
</ul>
<p>​    停用当前组件</p>
<ul>
<li><p>beforeDestroy   </p>
</li>
<li><p>destroyed     </p>
</li>
</ul>
<p>​    如果开了定时器,一定要关闭定时器、</p>
<h4 id="vue-router的基本使用"><a href="#vue-router的基本使用" class="headerlink" title="vue-router的基本使用"></a>vue-router的基本使用</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span>        </span><br><span class="line">            <span class="tag">&lt;<span class="name">App</span>/&gt;</span>   </span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"vue-router.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span>    </span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> Home = &#123;        </span></span><br><span class="line">                data()&#123;            </span><br><span class="line"><span class="actionscript">                    <span class="keyword">return</span>&#123;&#125;        </span></span><br><span class="line">                &#125;,        </span><br><span class="line"><span class="handlebars"><span class="xml">                template: `<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是主页<span class="tag">&lt;/<span class="name">div</span>&gt;</span>`    </span></span></span><br><span class="line">            &#125;    </span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> Course = &#123;        </span></span><br><span class="line">                data()&#123;            </span><br><span class="line"><span class="actionscript">                    <span class="keyword">return</span>&#123;&#125;        </span></span><br><span class="line">                &#125;,        </span><br><span class="line"><span class="handlebars"><span class="xml">                template: `<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是免费课程<span class="tag">&lt;/<span class="name">div</span>&gt;</span>`    </span></span></span><br><span class="line">            &#125;    </span><br><span class="line"><span class="actionscript">            <span class="comment">// 创建router实例    </span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;        </span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 定义router规则        </span></span></span><br><span class="line">                routes:[            </span><br><span class="line">                    &#123;               </span><br><span class="line"><span class="actionscript">                        path:<span class="string">'/'</span>,                </span></span><br><span class="line">                        component : Home            </span><br><span class="line">                    &#125;,            </span><br><span class="line">                    &#123;                </span><br><span class="line"><span class="actionscript">                        path:<span class="string">'/Course'</span>,                </span></span><br><span class="line">                        component : Course            </span><br><span class="line">                    &#125;        </span><br><span class="line">                ]    </span><br><span class="line">            &#125;)    </span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> App = &#123;        </span></span><br><span class="line">                data() &#123;            </span><br><span class="line"><span class="actionscript">                    <span class="keyword">return</span> &#123;&#125;        </span></span><br><span class="line">                &#125;,        </span><br><span class="line"><span class="handlebars"><span class="xml">                template: `<span class="tag">&lt;<span class="name">div</span>&gt;</span>                        </span></span></span><br><span class="line"><span class="javascript">                            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"header"</span>&gt;                            </span></span><br><span class="line"><span class="handlebars"><span class="xml">                                <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span>                            </span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                                <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/Course"</span>&gt;</span>免费课程<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span>                        						  <span class="tag">&lt;/<span class="name">div</span>&gt;</span>                        </span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                              <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span>                   </span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            			   <span class="tag">&lt;/<span class="name">div</span>&gt;</span>                  </span></span></span><br><span class="line">						`,    </span><br><span class="line">            &#125;    </span><br><span class="line"><span class="actionscript">            <span class="keyword">new</span> Vue(&#123;        </span></span><br><span class="line"><span class="actionscript">                el : <span class="string">"#app"</span>,        </span></span><br><span class="line">                router,        </span><br><span class="line">                data()&#123;            </span><br><span class="line"><span class="actionscript">                    <span class="keyword">return</span>&#123;&#125;        </span></span><br><span class="line">                &#125;,        </span><br><span class="line">                components:&#123;            </span><br><span class="line">                    App        </span><br><span class="line">                &#125;    </span><br><span class="line">            &#125;)<span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="命名路由"><a href="#命名路由" class="headerlink" title="命名路由"></a>命名路由</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">routes:[    # 定义路由规则</span><br><span class="line">    &#123;        </span><br><span class="line">        path:<span class="string">'/dfssf'</span>,        </span><br><span class="line">        name:<span class="string">'Home'</span>,        </span><br><span class="line">        component : Home    </span><br><span class="line">    &#125;,    </span><br><span class="line">    &#123;        </span><br><span class="line">        path:<span class="string">'/Coursedddddddddddddddddd'</span>,        </span><br><span class="line">        name:<span class="string">'Course'</span>,        </span><br><span class="line">        component : Course    </span><br><span class="line">    &#125;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">template: <span class="string">`&lt;div&gt;</span></span><br><span class="line"><span class="string">                &lt;div class="header"&gt;</span></span><br><span class="line"><span class="string">                    &lt;router-link :to="&#123;name:'Home'&#125;"&gt;首页&lt;/router-link&gt;</span></span><br><span class="line"><span class="string">                    &lt;router-link :to="&#123;name:'Course'&#125;"&gt;免费课程&lt;/router-link&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;router-view&gt;&lt;/router-view&gt;</span></span><br><span class="line"><span class="string">		 &lt;/div&gt;</span></span><br><span class="line"><span class="string">		`</span>,</span><br></pre></td></tr></table></figure>

<h4 id="动态路由匹配"><a href="#动态路由匹配" class="headerlink" title="动态路由匹配"></a>动态路由匹配</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">提醒一下，当使用路由参数时，例如从 /user/foo 导航到 /user/bar，原来的组件实例会被复用。因为两个路由都渲染同个组件，比起销毁再创建，复用则显得更加高效。不过，这也意味着组件的生命周期钩子不会再被调用。</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">created()&#123;     </span><br><span class="line">    <span class="keyword">this</span>.user_id = <span class="keyword">this</span>.$route.params.id   <span class="comment">//因此使用此方法，无法获取用户的id</span></span><br><span class="line">    consolo.log(<span class="keyword">this</span>.$route)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>复用组件时，想对路由参数的变化作出响应的话，你可以简单地 watch (监测变化) $route 对象：</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">watch: &#123;</span><br><span class="line">    <span class="string">'$route'</span> (to, <span class="keyword">from</span>) &#123;</span><br><span class="line">      <span class="comment">// 对路由变化作出响应...</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMTEvMjgvYnFLa0VmclZCTzF0VElDLnBuZw?x-oss-process=image/format,png" alt="image-20191125231714548.png"></p>
<h4 id="编程式的导航"><a href="#编程式的导航" class="headerlink" title="编程式的导航"></a>编程式的导航</h4>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>个人笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>测试换电脑hexo</title>
    <url>/2019/11/28/%E6%B5%8B%E8%AF%95%E6%8D%A2%E7%94%B5%E8%84%91hexo/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>薛之谦-演员</title>
    <url>/2019/11/28/music/</url>
    <content><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=32507038&auto=1&height=66"></iframe>]]></content>
      <categories>
        <category>娱乐</category>
      </categories>
      <tags>
        <tag>歌曲</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo个人博客的细节优化</title>
    <url>/2019/11/27/hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E7%BB%86%E8%8A%82%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<blockquote>
<p><strong>1、添加分享功能</strong></p>
</blockquote>
<p>找到主题配置文件（\themes \ next \ _config.yml）,如下修改即可</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">baidushare: </span><br><span class="line">  type: button</span><br><span class="line">  baidushare: <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p><strong>2、修改文章间距</strong></p>
</blockquote>
<p>找到 \themes \ next \ source \ css \ _custom \ _custom.styl</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">.post &#123;</span><br><span class="line">   margin-top: 0px;    # 上外边距</span><br><span class="line">   margin-bottom: 60px;  # 下外边距</span><br><span class="line">   padding: <span class="number">25</span>px;</span><br><span class="line">   -webkit-box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">5</span>px rgba(<span class="number">202</span>, <span class="number">203</span>, <span class="number">203</span>, <span class="number">.5</span>);</span><br><span class="line">   -moz-box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">5</span>px rgba(<span class="number">202</span>, <span class="number">203</span>, <span class="number">204</span>, <span class="number">.5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Next官网：<a href="http://theme-next.iissnan.com/theme-settings.html#syntax-highlight-scheme" target="_blank" rel="noopener">Next官网链接</a></p>
<blockquote>
<p><strong>3、修改内容区域的宽度</strong></p>
</blockquote>
<p>next主题的默认宽度（width：700px）如下图所示，太窄<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMTEvMjgvV3lMb1JReEdpWjVQU0ROLnBuZw?x-oss-process=image/format,png" alt="001.png"><br>打开 \themes \ next \ source \ css \ _variables \ custom.styl 添加两行代码即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 路径：\themes\next\source\css\_variables\custom.styl</span></span><br><span class="line"><span class="variable">$main</span>-desktop = 1200px </span><br><span class="line"><span class="variable">$content</span>-desktop = 900px</span><br></pre></td></tr></table></figure>
<p>看效果，此时width: 900px<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMTEvMjgvbzZENGtnZnZXckhTalA1LnBuZw?x-oss-process=image/format,png" alt="005.png"></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
  </entry>
  <entry>
    <title>hexo创建分类和标签</title>
    <url>/2019/11/27/hexo%E5%88%9B%E5%BB%BA%E5%88%86%E7%B1%BB%E5%92%8C%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<blockquote>
<p><strong>1、修改主题配置文件</strong><br>路径：blog \ themes \ next \ _config.yml</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: <span class="regexp">/</span></span><br><span class="line"><span class="regexp">  #about: /</span>about/ || user</span><br><span class="line">  #tags: /tags/ || tags</span><br><span class="line">  categories: <span class="regexp">/categories/</span></span><br><span class="line">  archives: <span class="regexp">/archives/</span> || archive</span><br><span class="line">  tags: <span class="regexp">/tags/</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p><strong>2、创建文件categories和tags文件</strong></p>
</blockquote>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">hexo new page categories   # 创建分类文件</span><br><span class="line">hexo new page tags         # 创建标签文件</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20191127100210425.png" alt="在这里插入图片描述"></p>
<blockquote>
<p><strong>3、修改categories/index.md和tags/index.md文件</strong></p>
</blockquote>
<p>categories/index.md的文件内容如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: <span class="number">2019</span><span class="number">-11</span><span class="number">-26</span> <span class="number">17</span>:<span class="number">14</span>:<span class="number">17</span></span><br><span class="line">type: <span class="string">"categories"</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>tags/index.md的文件内容如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: <span class="number">2019</span><span class="number">-11</span><span class="number">-26</span> <span class="number">17</span>:<span class="number">14</span>:<span class="number">17</span></span><br><span class="line">type: <span class="string">"tags"</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<blockquote>
<p> <strong>4、修改source / _posts / musci.md 文章内容</strong></p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">title: 薛之谦-演员</span><br><span class="line">top: </span><br><span class="line">    <span class="literal">true</span></span><br><span class="line">categories: 娱乐</span><br><span class="line">tags:</span><br><span class="line">    - 歌曲</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>5、实现效果</strong></p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20191127102146585.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="文章分类"><br><img src="https://img-blog.csdnimg.cn/20191127102454976.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="标签"></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
  </entry>
  <entry>
    <title>使用hexo和github搭建个人博客</title>
    <url>/2019/11/26/hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h5 id="问题一："><a href="#问题一：" class="headerlink" title="问题一："></a>问题一：</h5><p>nrm : 无法加载文件 C:\Users\TANG\AppData\Roaming\npm\nrm.ps1，因为在此系统上禁止运行脚本。</p>
<h6 id="处理方式："><a href="#处理方式：" class="headerlink" title="处理方式："></a>处理方式：</h6><p> <a href="https://www.cnblogs.com/lingblog/p/11845011.html" target="_blank" rel="noopener">https://www.cnblogs.com/lingblog/p/11845011.html</a> </p>
<h3 id="搭建博客步骤"><a href="#搭建博客步骤" class="headerlink" title="搭建博客步骤"></a>搭建博客步骤</h3><p><strong>GitHub创建个人仓库</strong></p>
<p>登录到GitHub,如果没有GitHub帐号，使用你的邮箱注册GitHub帐号：<a href="http://link.zhihu.com/?target=https%3A//github.com/">Build software better, together</a> 点击GitHub中的New repository创建新仓库，仓库名应该为：<strong>用户名</strong>.<a href="http://link.zhihu.com/?target=http%3A//github.io">http://github.io</a> 这个<strong>用户名</strong>使用你的GitHub帐号名称代替，这是固定写法，比如我的仓库名为：<br><img src="https://img-blog.csdnimg.cn/20191128094057439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="github仓库名"><br>什么是Git ?简单来说Git是开源的分布式版本控制系统，用于敏捷高效地处理项目。我们网站在本地搭建好了，需要使用Git同步到GitHub上。如果想要了解Git的细节，参看<a href="http://link.zhihu.com/?target=http%3A//weibo.com/liaoxuefeng">廖雪峰</a>老师的Git教程：<a href="http://link.zhihu.com/?target=http%3A//www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000">Git教程</a> 从Git官网下载：<a href="http://link.zhihu.com/?target=https%3A//git-scm.com/download/win">Git - Downloading Package</a> 现在的机子基本都是64位的，选择64位的安装包，下载后安装，在命令行里输入git测试是否安装成功，若安装失败，参看其他详细的Git安装教程。安装成功后，将你的Git与GitHub帐号绑定，鼠标右击打开Git Bash</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMzLnpoaW1nLmNvbS81MC92Mi04YjFjYmUyNTNkNmUwMzAxYmQ5YTY4YzZmOThhOWY1Ml9oZC5qcGc?x-oss-process=image/format,png" alt="img"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">"你的GitHub用户名"</span></span><br><span class="line">git config --global user.email <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure>

<p>生成ssh密钥文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure>

<p>然后直接三个回车即可，默认不需要设置密码<br>然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制<br><img src="https://img-blog.csdnimg.cn/20191128094415435.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ5MzM0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>新建SSH密钥<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMzLnpoaW1nLmNvbS81MC92Mi03MmEzZjIyYzA4MGU5OTM0M2MzY2M0YWFiY2UxMGUzY19oZC5qcGc?x-oss-process=image/format,png" alt="img"></p>
<p><strong>安装Node.js</strong></p>
<p>Hexo基于Node.js，Node.js下载地址：<a href="http://link.zhihu.com/?target=https%3A//nodejs.org/en/download/">Download | Node.js</a> 下载安装包，注意安装Node.js会包含环境变量及npm的安装，安装后，检测Node.js是否安装成功，在命令行中输入 node -v :</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMzLnpoaW1nLmNvbS81MC92Mi03NmVhMzhlOTU0NWU2MDZmOTc1NzgxZTQ3OTMzYjAxMF9oZC5qcGc?x-oss-process=image/format,png" alt="img"></p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWMzLnpoaW1nLmNvbS81MC92Mi1iZWRlMjUwYjg0NTZkZjkyNDc1YjQ1NWZkYThjMWRkOV9oZC5qcGc?x-oss-process=image/format,png" alt="img"></p>
<p><strong>安装Hexo</strong></p>
<p>Hexo就是我们的个人博客网站的框架， 这里需要自己在电脑常里创建一个文件夹，可以命名为MyBlog，Hexo框架与以后你自己发布的网页都在这个文件夹中。创建好后，进入文件夹中，按住shift键，右击鼠标点击命令行</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9waWM0LnpoaW1nLmNvbS81MC92Mi1hNTQ1MGE0NjZjMDkyN2MyNWRmZjhhZDZmMWQyMDQ2Y19oZC5qcGc?x-oss-process=image/format,png" alt="img"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p> 这个安装时间较长耐心等待，安装完成后，初始化我们的博客，输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure>

<p>注意，这里的命令都是切换到<strong>blog文件夹</strong>中。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PS D:\MyProject\MyBlog&gt; <span class="built_in">cd</span> blog</span><br><span class="line">					  hexo new test_my_site</span><br><span class="line">					  hexo g  <span class="comment"># 生成</span></span><br><span class="line">					  hexo s  <span class="comment"># 启动服务</span></span><br></pre></td></tr></table></figure>

<p>这些命令在后面作介绍，完成后，打开浏览器输入地址：</p>
<p>localhost:4000</p>
<p>转载</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
</search>
